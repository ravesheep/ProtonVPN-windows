<!--
Copyright (c) 2023 Proton AG

This file is part of ProtonVPN.

ProtonVPN is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ProtonVPN is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with ProtonVPN.  If not, see <https://www.gnu.org/licenses/>.
-->

<UserControl x:Class="ProtonVPN.Sidebar.Announcements.AnnouncementsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:announcements="clr-namespace:ProtonVPN.Sidebar.Announcements"
             xmlns:icons="clr-namespace:ProtonVPN.Resource.Graphics.Icons;assembly=ProtonVPN.Resource"
             d:DataContext="{d:DesignInstance announcements:AnnouncementsViewModel}"
             mc:Ignorable="d">
    <UserControl.Resources>
        <Style x:Key="ToggleButton" TargetType="ToggleButton" BasedOn="{StaticResource EmptyToggleButton}">
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="0,6,0,0"/>
            <Setter Property="IsChecked" Value="{Binding ShowAnnouncements, Mode=TwoWay}"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>
        <Style x:Key="AnnouncementsPopup" TargetType="Popup">
            <Setter Property="IsOpen" Value="{Binding IsChecked, ElementName=TogglePopupButton, Mode=TwoWay}"/>
            <Setter Property="StaysOpen" Value="False"/>
            <Setter Property="VerticalOffset" Value="5"/>
            <Setter Property="AllowsTransparency" Value="True"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="PlacementTarget" Value="{Binding ElementName=TogglePopupButton}"/>
        </Style>
    </UserControl.Resources>
    <Grid Visibility="{Binding HasAnnouncements, Converter={StaticResource BoolToVis}}">
        <ToggleButton Style="{StaticResource ToggleButton}"
                      MouseEnter="OpenPopupButton_MouseEnter"
                      MouseLeave="OpenPopupButton_MouseLeave"
                      Command="{Binding OpenAnnouncementCommand}"
                      x:Name="TogglePopupButton">
            <Grid>
                <Image Name="IconImage"
                       Width="24"
                       Height="24"
                       Margin="0"
                       ImageFailed="OnIconImageFailed"
                       Source="{Binding Announcement.Icon}">
                    <Image.Style>
                        <Style TargetType="Image">
                            <Setter Property="Visibility" Value="Visible" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Announcement.Icon}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <icons:Bell Name="FallbackIconImage"
                            Width="24"
                            Height="24"
                            Foreground="White"
                            Margin="0">
                    <icons:Bell.Style>
                        <Style TargetType="icons:Bell">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=IconImage, Path=Visibility}"
                                             Value="Collapsed">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </icons:Bell.Style>
                </icons:Bell>
                <Ellipse Width="5"
                         Height="5"
                         Margin="19,-16,0,0"
                         Fill="{StaticResource NotificationErrorBrushColor}">
                    <Ellipse.Resources>
                        <Style TargetType="Ellipse">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HasUnread}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Ellipse.Resources>
                </Ellipse>
            </Grid>
        </ToggleButton>
        <Popup Style="{StaticResource AnnouncementsPopup}" Name="Popup">
            <Grid>
                <Border BorderThickness="0" 
                        CornerRadius="3"
                        Margin="10,8,10,10" 
                        Padding="8,3,8,3"
                        Background="{StaticResource BackgroundWeakBrushColor}">
                    <Button VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            BorderThickness="0"
                            Background="Transparent">
                        <TextBlock Text="{Binding Announcement.Label}"
                                   Foreground="{StaticResource TextNormBrushColor}"
                                   TextWrapping="Wrap"/>
                    </Button>
                    <Border.Effect>
                        <DropShadowEffect BlurRadius="5"
                                          Direction="-45"
                                          Opacity="0.8"
                                          Color="{StaticResource ShadowNormColor}"
                                          RenderingBias="Quality"
                                          ShadowDepth="2" />
                    </Border.Effect>
                </Border>
                <Polygon Points="0,0 16,0 8,8"
                         StrokeThickness="0"
                         Fill="{StaticResource BackgroundWeakBrushColor}"
                         VerticalAlignment="Top"
                         RenderTransformOrigin="0.5,0.5"
                         HorizontalAlignment="Center">
                    <Polygon.RenderTransform>
                        <ScaleTransform ScaleY="-1"/>
                    </Polygon.RenderTransform>
                </Polygon>
            </Grid>
        </Popup>
    </Grid>
</UserControl>